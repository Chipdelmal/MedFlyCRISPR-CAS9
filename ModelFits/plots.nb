(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    195531,       3839]
NotebookOptionsPosition[    193051,       3771]
NotebookOutlinePosition[    193437,       3788]
CellTagsIndexPosition[    193394,       3785]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["First Plot", "Title",
 CellChangeTimes->{{3.7257247653897133`*^9, 
  3.725724770224526*^9}},ExpressionUUID->"304d4e64-94bd-42cb-88f7-\
788f7a7e75b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataRaw", "=", 
   RowBox[{"Import", "[", "\"\<modelFit.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"labels", "=", 
  RowBox[{"dataRaw", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"3", ";;", "All"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"dataRaw", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", ";;", "All"}], ",", 
     RowBox[{"3", ";;", "All"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.72572208197826*^9, 3.7257221154278727`*^9}, {
  3.7257226045996313`*^9, 3.725722606240341*^9}, {3.725722739369032*^9, 
  3.725722758830288*^9}, {3.725722839396323*^9, 3.7257228555122557`*^9}, {
  3.725722916907337*^9, 3.725722924451715*^9}, {3.72703956905376*^9, 
  3.727039589486375*^9}},ExpressionUUID->"09ef80fb-7e2a-4528-8b6c-\
b46db9e360af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A_M_Pred\"\>", ",", "\<\"A_Av_M_Obs\"\>", 
   ",", "\<\"A_F_Pred\"\>", ",", "\<\"A_Av_F_Obs\"\>", 
   ",", "\<\"B_M_Pred\"\>", ",", "\<\"B_Av_M_Obs\"\>", 
   ",", "\<\"B_F_Pred\"\>", ",", "\<\"B_Av_F_Obs\"\>", 
   ",", "\<\"C_M_Pred\"\>", ",", "\<\"C_Av_M_Obs\"\>", 
   ",", "\<\"C_F_Pred\"\>", ",", "\<\"C_Av_F_Obs\"\>", 
   ",", "\<\"D_M_Pred\"\>", ",", "\<\"D_Av_M_Obs\"\>", 
   ",", "\<\"D_F_Pred\"\>", ",", "\<\"D_Av_F_Obs\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727039589915662*^9},ExpressionUUID->"606e16c1-4f81-42b7-a366-\
facb714767f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0476190476190476`", ",", "0.0476190476190476`", ",", "0", ",", "0", 
     ",", "0.2`", ",", "0.2`", ",", "0", ",", "0", ",", "0.333333333333333`", 
     ",", "0.333333333333333`", ",", "0", ",", "0", ",", "0.5`", ",", "0.5`", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.086`", ",", "0.0847600036122942`", ",", "0", ",", "0.00025`", ",", 
     "0.315333333333333`", ",", "0.27020803854318`", ",", "0", ",", 
     "0.00152934372129419`", ",", "0.473`", ",", "0.401054077863277`", ",", 
     "0", ",", "0.00367501769401187`", ",", "0.946`", ",", 
     "0.549596489814929`", ",", "0", ",", "0.0166616143295004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0813199505689278`", ",", "0.122258102462684`", ",", 
     "0.0000360494310722101`", ",", "0.00102083333333333`", ",", 
     "0.297658327364492`", ",", "0.317390072358228`", ",", 
     "0.000647005968841285`", ",", "0.00394757633147726`", ",", 
     "0.445566704563567`", ",", "0.435863166398634`", ",", 
     "0.00189129543643264`", ",", "0.0126912816788249`", ",", "0.82108543`", 
     ",", "0.569134475063648`", ",", "0.07383057`", ",", 
     "0.0309901807137954`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0768339619216753`", ",", "0.152289615506342`", ",", 
     "0.0000675945220517589`", ",", "0.00347450017409152`", ",", 
     "0.279815416880732`", ",", "0.327271517963321`", ",", 
     "0.00129494672472967`", ",", "0.0144152054425281`", ",", 
     "0.416118225082454`", ",", "0.424509334868055`", ",", 
     "0.00404437151027604`", ",", "0.0274170261750371`", ",", 
     "0.610407737737034`", ",", "0.451269177979177`", ",", 
     "0.147408510758846`", ",", "0.0544323865675707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0725424716578122`", ",", "0.197691390406667`", ",", 
     "0.0000948074482162885`", ",", "0.00727578755145821`", ",", 
     "0.26211136417395`", ",", "0.334421414543444`", ",", 
     "0.00191786771758512`", ",", "0.0211839012095994`", ",", 
     "0.385964456191047`", ",", "0.367228783311904`", ",", 
     "0.00631112256184157`", ",", "0.0386919789127069`", ",", 
     "0.499029941706067`", ",", "0.38447689015704`", ",", 
     "0.169296458811178`", ",", "0.0706009476040491`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0684431305451377`", ",", "0.214025384214654`", ",", 
     "0.00011798373960001`", ",", "0.0104467585403356`", ",", 
     "0.244686648679117`", ",", "0.314693534404176`", ",", 
     "0.00249915127096705`", ",", "0.0309272681819348`", ",", 
     "0.355613302197416`", ",", "0.331076051758349`", ",", 
     "0.00856435349653471`", ",", "0.0399378311948694`", ",", 
     "0.407921236454765`", ",", "0.44218679142141`", ",", 
     "0.175854046199304`", ",", "0.0820592732163692`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0645329733381667`", ",", "0.181536549734824`", ",", 
     "0.000137429016687976`", ",", "0.0200167945706997`", ",", 
     "0.227691226698119`", ",", "0.28579810600074`", ",", 
     "0.00302505017790273`", ",", "0.0373203076347468`", ",", 
     "0.325733504427209`", ",", "0.296654359376472`", ",", 
     "0.0106815016177879`", ",", "0.0418001815529701`", ",", 
     "0.340717806879021`", ",", "0.434655816116758`", ",", 
     "0.171658515094382`", ",", "0.130762921996012`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0608084326597462`", ",", "0.211199734471851`", ",", 
     "0.000153452250474495`", ",", "0.0221861386347235`", ",", 
     "0.211259539509442`", ",", "0.333348995966142`", ",", 
     "0.00348536385772586`", ",", "0.0450509418420929`", ",", 
     "0.296907491636515`", ",", "0.303426032351018`", ",", 
     "0.0125641216524157`", ",", "0.06588408192155`", ",", 
     "0.289592234765787`", ",", "0.481507910907874`", ",", 
     "0.163240234978407`", ",", "0.189022090269729`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0572654015569871`", ",", "0.217405203322983`", ",", 
     "0.000166360617955363`", ",", "0.0376065210686353`", ",", 
     "0.195505664161948`", ",", "0.340554703899968`", ",", 
     "0.0038737558466744`", ",", "0.0623628210155115`", ",", 
     "0.269600094743587`", ",", "0.376694444244865`", ",", 
     "0.0141472294157411`", ",", "0.103352632105811`", ",", 
     "0.250172749903998`", ",", "0.477474783525548`", ",", 
     "0.153299909091201`", ",", "0.156916475385362`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.727039589926244*^9},ExpressionUUID->"3d17a3b4-83f8-43c1-b82e-\
42e388779dd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotOneIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"labels", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A_M_Pred\>\"", ",", "\"\<A_Av_M_Obs\>\"", ",", "\"\<B_M_Pred\>\"", 
       ",", "\"\<B_Av_M_Obs\>\"", ",", "\"\<C_M_Pred\>\"", ",", 
       "\"\<C_Av_M_Obs\>\"", ",", "\"\<D_M_Pred\>\"", ",", 
       "\"\<D_Av_M_Obs\>\""}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selected", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "data", "]"}], "[", 
    RowBox[{"[", "plotOneIndices", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"males", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"selected", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".01", "]"}], ",", "#"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", ".25", "]"}], ",", 
                RowBox[{"Thickness", "[", ".02", "]"}], ",", "#"}], "]"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"(", 
               RowBox[{"plotOneIndices", "//", "Length"}], ")"}]}], "]"}], 
            "]"}]}], "//", "Flatten"}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", ".0075", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "Gray", ",", "30"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<Generation\>\"", ",", "\"\<Population Size\>\""}], 
         "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Males\>\"", ",", "Gray", ",", "40"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotOneIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"labels", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A_F_Pred\>\"", ",", "\"\<A_Av_F_Obs\>\"", ",", "\"\<B_F_Pred\>\"", 
       ",", "\"\<B_Av_F_Obs\>\"", ",", "\"\<C_F_Pred\>\"", ",", 
       "\"\<C_Av_F_Obs\>\"", ",", "\"\<D_F_Pred\>\"", ",", 
       "\"\<D_Av_F_Obs\>\""}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selected", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "data", "]"}], "[", 
    RowBox[{"[", "plotOneIndices", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"females", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"selected", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".01", "]"}], ",", "#"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", ".25", "]"}], ",", 
                RowBox[{"Thickness", "[", ".02", "]"}], ",", "#"}], "]"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"(", 
               RowBox[{"plotOneIndices", "//", "Length"}], ")"}]}], "]"}], 
            "]"}]}], "//", "Flatten"}], ")"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", ".0075", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "Gray", ",", "30"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Females\>\"", ",", "Gray", ",", "40"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swatch", "=", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", "25"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"LegendLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Experiment\>\"", ",", "30"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"males", ",", "females", ",", "swatch"}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<experimentsGrid.pdf\>\"", ",", "grid"}], "]"}]}], "Input",
 CellChangeTimes->{{3.725722936554083*^9, 3.725722955719462*^9}, {
   3.7257230455927134`*^9, 3.725723147453433*^9}, {3.7257232250314693`*^9, 
   3.7257232325278797`*^9}, {3.725723441047333*^9, 3.725723450918069*^9}, {
   3.725723495162566*^9, 3.725723710781152*^9}, {3.72572377007834*^9, 
   3.725723785276966*^9}, 3.72572384805756*^9, {3.725724031775408*^9, 
   3.725724236069036*^9}, {3.725724297032711*^9, 3.7257243531634617`*^9}, {
   3.725725253327496*^9, 3.725725271815365*^9}, 3.725725354079216*^9, {
   3.725725958197311*^9, 3.7257259647602863`*^9}, {3.7257298639123983`*^9, 
   3.7257298707776823`*^9}, {3.725731015197867*^9, 
   3.725731016436063*^9}},ExpressionUUID->"94d4c53c-44f1-4236-b101-\
f395cefb2509"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.0476190476190476}, {2., 0.086}, {3., 
          0.0813199505689278}, {4., 0.0768339619216753}, {5., 
          0.0725424716578122}, {6., 0.0684431305451377}, {7., 
          0.0645329733381667}, {8., 0.0608084326597462}, {9., 
          0.0572654015569871}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.0476190476190476}, {2., 0.0847600036122942}, {3., 
          0.122258102462684}, {4., 0.152289615506342}, {5., 
          0.197691390406667}, {6., 0.214025384214654}, {7., 
          0.181536549734824}, {8., 0.211199734471851}, {9., 
          0.217405203322983}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.2}, {2., 0.315333333333333}, {3., 
          0.297658327364492}, {4., 0.279815416880732}, {5., 
          0.26211136417395}, {6., 0.244686648679117}, {7., 
          0.227691226698119}, {8., 0.211259539509442}, {9., 
          0.195505664161948}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.2}, {2., 0.27020803854318}, {3., 
          0.317390072358228}, {4., 0.327271517963321}, {5., 
          0.334421414543444}, {6., 0.314693534404176}, {7., 
          0.28579810600074}, {8., 0.333348995966142}, {9., 
          0.340554703899968}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.333333333333333}, {2., 0.473}, {3., 
          0.445566704563567}, {4., 0.416118225082454}, {5., 
          0.385964456191047}, {6., 0.355613302197416}, {7., 
          0.325733504427209}, {8., 0.296907491636515}, {9., 
          0.269600094743587}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.333333333333333}, {2., 0.401054077863277}, {3., 
          0.435863166398634}, {4., 0.424509334868055}, {5., 
          0.367228783311904}, {6., 0.331076051758349}, {7., 
          0.296654359376472}, {8., 0.303426032351018}, {9., 
          0.376694444244865}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.5}, {2., 0.946}, {3., 0.82108543}, {4., 
          0.610407737737034}, {5., 0.499029941706067}, {6., 
          0.407921236454765}, {7., 0.340717806879021}, {8., 
          0.289592234765787}, {9., 0.250172749903998}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.5}, {2., 0.549596489814929}, {3., 
          0.569134475063648}, {4., 0.451269177979177}, {5., 
          0.38447689015704}, {6., 0.44218679142141}, {7., 
          0.434655816116758}, {8., 0.481507910907874}, {9., 
          0.477474783525548}}]}}, {}, {}, {}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.0408163265306123`, 0},
      BaseStyle->20,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Population Size\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}, {
         FormBox[
          StyleBox["\"Generation\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[0.0075]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        Thickness[0.0001], 
        Opacity[0.5]],
      ImagePadding->All,
      ImageSize->1000,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Males\"", 
         GrayLevel[0.5], 40, StripOnInput -> False], TraditionalForm],
      PlotRange->{{1, 9.}, {0, 0.946}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.}, {2., 0.}, {3., 0.0000360494310722101}, {4., 
          0.0000675945220517589}, {5., 0.0000948074482162885}, {6., 
          0.00011798373960001}, {7., 0.000137429016687976}, {8., 
          0.000153452250474495}, {9., 0.000166360617955363}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.}, {2., 0.00025}, {3., 0.00102083333333333}, {4., 
          0.00347450017409152}, {5., 0.00727578755145821}, {6., 
          0.0104467585403356}, {7., 0.0200167945706997}, {8., 
          0.0221861386347235}, {9., 0.0376065210686353}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.}, {2., 0.}, {3., 0.000647005968841285}, {4., 
          0.00129494672472967}, {5., 0.00191786771758512}, {6., 
          0.00249915127096705}, {7., 0.00302505017790273}, {8., 
          0.00348536385772586}, {9., 0.0038737558466744}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.}, {2., 0.00152934372129419}, {3., 
          0.00394757633147726}, {4., 0.0144152054425281}, {5., 
          0.0211839012095994}, {6., 0.0309272681819348}, {7., 
          0.0373203076347468}, {8., 0.0450509418420929}, {9., 
          0.0623628210155115}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.}, {2., 0.}, {3., 0.00189129543643264}, {4., 
          0.00404437151027604}, {5., 0.00631112256184157}, {6., 
          0.00856435349653471}, {7., 0.0106815016177879}, {8., 
          0.0125641216524157}, {9., 0.0141472294157411}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.}, {2., 0.00367501769401187}, {3., 
          0.0126912816788249}, {4., 0.0274170261750371}, {5., 
          0.0386919789127069}, {6., 0.0399378311948694}, {7., 
          0.0418001815529701}, {8., 0.06588408192155}, {9., 
          0.103352632105811}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.016666666666666666`], Thickness[0.01], 
         LineBox[{{1., 0.}, {2., 0.}, {3., 0.07383057}, {4., 
          0.147408510758846}, {5., 0.169296458811178}, {6., 
          0.175854046199304}, {7., 0.171658515094382}, {8., 
          0.163240234978407}, {9., 0.153299909091201}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.016666666666666666`], Thickness[0.02], Opacity[0.25], 
         LineBox[{{1., 0.}, {2., 0.0166616143295004}, {3., 
          0.0309901807137954}, {4., 0.0544323865675707}, {5., 
          0.0706009476040491}, {6., 0.0820592732163692}, {7., 
          0.130762921996012}, {8., 0.189022090269729}, {9., 
          0.156916475385362}}]}}, {}, {}, {}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.0408163265306123`, 0},
      BaseStyle->20,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}, {
         FormBox[
          StyleBox["\"\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[0.0075]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        Thickness[0.0001], 
        Opacity[0.5]],
      ImagePadding->All,
      ImageSize->1000,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Females\"", 
         GrayLevel[0.5], 40, StripOnInput -> False], TraditionalForm],
      PlotRange->{{1, 9.}, {0, 0.189022090269729}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{"\"1\"","\"2\"","\"3\"","\"4\""},
      "SwatchLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                 StyleBox["\"Experiment\"", 30, StripOnInput -> False], 
                 TraditionalForm], TraditionalForm, Editable -> True], {
                Directive[
                 GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                   None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "25"}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             StyleBox["\"Experiment\"", 30, StripOnInput -> False]}]}], 
         "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.727039599627693*^9},ExpressionUUID->"aa66b49b-ffdc-4a6b-a2b5-\
7abf43d4daf5"],

Cell[BoxData["\<\"experimentsGrid.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.727039601180073*^9},ExpressionUUID->"d6e0f08c-d000-4f5e-b77d-\
f851903a66ad"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Second Plot", "Title",
 CellChangeTimes->{{3.7257247653897133`*^9, 
  3.7257247777567587`*^9}},ExpressionUUID->"0a82a1d7-261e-4dfd-a71e-\
fe159c8d2376"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataRaw", "=", 
   RowBox[{"Import", "[", "\"\<modelFit2.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"labels", "=", 
  RowBox[{"dataRaw", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"3", ";;", "All"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"dataRaw", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", "All"}], ",", 
      RowBox[{"3", ";;", "All"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.72572208197826*^9, 3.7257221154278727`*^9}, {
  3.7257226045996313`*^9, 3.725722606240341*^9}, {3.725722739369032*^9, 
  3.725722758830288*^9}, {3.725722839396323*^9, 3.7257228555122557`*^9}, {
  3.725722916907337*^9, 3.725722924451715*^9}, {3.7257247948992443`*^9, 
  3.725724813906357*^9}, {3.727039630020856*^9, 
  3.727039637211563*^9}},ExpressionUUID->"7d95e7e9-7cc1-49b1-8b91-\
81db49545b55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D_Female_Pred\"\>", ",", "\<\"D_D_Allele_Pred\"\>", 
   ",", "\<\"D_W_Allele_Pred\"\>", ",", "\<\"D_R_Allele_Pred\"\>", 
   ",", "\<\"D_B_Allele_Pred\"\>", ",", "\<\"I_Female_Pred\"\>", 
   ",", "\<\"I_D_Allele_Pred\"\>", ",", "\<\"I_W_Allele_Pred\"\>", 
   ",", "\<\"I_R_Allele_Pred\"\>", ",", "\<\"I_B_Allele_Pred\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7270396310305862`*^9, 
  3.727039643280841*^9}},ExpressionUUID->"06d357e1-7f23-4557-bd67-\
286601c7bdae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotOneIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"labels", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<D_Female_Pred\>\"", ",", "\"\<D_D_Allele_Pred\>\"", ",", 
       "\"\<D_W_Allele_Pred\>\"", ",", "\"\<D_R_Allele_Pred\>\"", ",", 
       "\"\<D_B_Allele_Pred\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selected", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "data", "]"}], "[", 
    RowBox[{"[", "plotOneIndices", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"males", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"selected", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Opacity", "[", ".75", "]"}], ",", 
              RowBox[{"Thickness", "[", ".015", "]"}], ",", "#"}], "]"}], 
            "}"}], "&"}], "/@", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "[", "plotOneIndices", "]"}]}], "]"}], "]"}]}],
          ")"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", ".0075", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "Gray", ",", "30"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<Days\>\"", ",", "\"\<Population Size\>\""}], "}"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Fitted\>\"", ",", "Gray", ",", "40"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotOneIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"labels", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<I_Female_Pred\>\"", ",", "\"\<I_D_Allele_Pred\>\"", ",", 
       "\"\<I_W_Allele_Pred\>\"", ",", "\"\<I_R_Allele_Pred\>\"", ",", 
       "\"\<I_B_Allele_Pred\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selected", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "data", "]"}], "[", 
    RowBox[{"[", "plotOneIndices", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"females", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"selected", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Opacity", "[", ".75", "]"}], ",", 
              RowBox[{"Thickness", "[", ".015", "]"}], ",", "#"}], "]"}], 
            "}"}], "&"}], "/@", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "[", "plotOneIndices", "]"}]}], "]"}], "]"}]}],
          ")"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", ".0075", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "Gray", ",", "30"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Ideal\>\"", ",", "Gray", ",", "40"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swatch", "=", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<B\>\"", ",", "\"\<D\>\"", ",", "\"\<XX\>\"", ",", "\"\<R\>\"", 
       ",", "\"\<W\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", "25"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"LegendLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Experiment\>\"", ",", "30"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"males", ",", "females", ",", "swatch"}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<experimentsGrid2.pdf\>\"", ",", "grid"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7257246075402193`*^9, {3.725724821488011*^9, 3.725724844545472*^9}, {
   3.725725010018916*^9, 3.725725018156198*^9}, {3.725725444720886*^9, 
   3.725725493823065*^9}, {3.725725544068308*^9, 3.725725603242489*^9}, {
   3.725729795844646*^9, 3.725729810157235*^9}, {3.725729885164014*^9, 
   3.725729889073897*^9}, {3.72573096367622*^9, 3.7257309861757708`*^9}, {
   3.727039930724456*^9, 
   3.727039938833213*^9}},ExpressionUUID->"6e98dd1f-5aa1-414c-a830-\
097ff892f349"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1:eJw91H0w1Akcx/GttutBjjyU6Dq6rpAe5DxE2g+2SHlmPaxldx0ppTykM6U8
XOGaK+UiTFEpNpNED6fmWJ2TkmrqVkpEHlaILlFRnKb9/n4zOzuv/ex7v/+t
nniHe/BkFouVMfH68v71ecPJzvryPOUoPsCGfytn3+2WKTwd+QNSdl5cg8Kq
uDK5IFRP/YnCGrhrHbol5TxZC8Yjp+slZo0Kz0fLHl4c7xZZF5yLxguPONC9
hdi6LGdFai15ESrTftcrtXmm8GJ0CZLKLpaR9RE4J/sf1wVNChsiMcfYMTuB
bAS1/J83FzWTl0PXMkZSueq5wisxNWa77McEsjHMBqslq++QV8Ey8NyFAKVm
hU0wL7FpeNSe/BOMxzJVYveTTRH7OinKqpRsBklRYU9+K9kcQbxMkZpSi8IW
UFX1N20yJq/GzdedMlcvsiUkko7Cil1kK5x9wdHZmk5eg/lxY4+OFZOtcbw/
bzjyNnkt/JGewGkhczC2ZX+u/iAZOBI5MsPvmxdfHQ/EsP2CR+cqzLJB3LRf
s1fq026DqZrORtrmtNviqvUfyTIu7bYI+vOEU5wb7Xawv5l6wkBAux2UbTmW
bzbTzsWnguChjgjaueiwE16et4f2dcias0ZyKon2dTC8q5qReIj29Wi4tkL2
6Bjt68Fv3vdbThbt9qjt9a2U59Juj2Yz531V52h3wOAlVp9xEe0OaLh0UGBT
QvsGdJpHb3t/hfYNyOY8n84vp90RkvbY1Mi/aHfEwi6TG3ZVtG9E+MDiV4+r
ad+I1rCAt0tqad8EfmmgI7eO9k1Y6lMwbdl92p1wb5lpb+dD2p3Q6ojQyMe0
O4MvMyiSyWh3BvfqrVy1RtpdUGo+PLz0Ge0uaCh+tXTRc9pdYSrITfncrDBc
Id5hYHjjBX3fFVEhv7D92xSWuqJJ+0Fnx0vq3cDe2hnL66DeDWGFVZtKO6l3
w3VN1/qPXdS7Qed+hcvyburdsW1KvorbK+rdISsZNA7qod4dn8Pv1AT3Uu+O
vIyZdb591Htg9c4OA7ym3gPK9w0q5vVT74FurXQPOVnqgZ3J7QWSAeo90T44
FCZ6Q70nYpPLuCr/Ue+J3RbDdWVkqSfkcp+jLm+p98L30mHtdjK8IN6o0xU+
SL0XajM7Ng+SpV6IOdmoHPGOeh4aP4Wv7SaDByPNNF/fIep5WOA9s7yaLOVh
2/mxEsNh6r0RnsxNO0SGN67W1OTJyfHeCDB/uoTznnpvRGmlhBwjs3yQerYt
q40MH8yythw1+kC9DzxKw6TRZKkPNHpU5peTWb7QFV+3HiHDFw/rddwtPlLv
i1A9l6QostQX467yD0Vklh8spyxpbCPDD7ERP3A1R6j3w6xiuWA9WeoHo/3H
ubvILD6KxpM0z5DBh5aRf989pudjxkGT9iGm54M3kK/23Sj1/jjbIj9qS574
tzyg1BUTQo73x/lil4YUstQfk3YU/y1hegGcNXa73WF6Ad5paB+VM70AHHX1
dPYn6gUIFbwP0SWzAsBPSNKxIiMAZuzCCk9yfACinY4LtjN9ACwe1bAPMH0g
Cg4rS3OYPhCsp1nZl5k+EO9OsHNrmD4QZv3eT54xvRCtLnOd+sm6QoQZ2c+Y
9Jl+TwgTjWgNdbJQiLTo8phF5Hghintvm5uS84QosuoNWEeWTvilyqAnuVWI
UUHtSBCZJcLMBe57I8m6ImBFdlw8c1+E7JM27MPMfRFYGac1c5j7IjQ7PrhW
wNwXIeJUbl8Zc1+EJ5kXblYy90Xg5Dvr1zH3xRBJyswamPtilPTU97Qy98VI
rhY69DL3xRjnTPIYYu6LEZWg9e04c18MJY2uvdPH6L4YVRqJZ2ZP+H8rEBPF

          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1:eJw91gk41AkYx3FKl1p0KHKskCNXyH39qDBoDscwwzAzEkkPQj08rClS2dbW
Sku2dLBZOmX1tM9uzZbIltgcYbdYV1GPq5VsxW7Pzuv/PPPM8533+cw7x//5
z6wTx/tHzZOTkzv53+3T/f/HmFvjo0/HazfZAyiv+HQMy3oxBPLpTteKqFWQ
ZZu+7kQ29Srsa1iWoRtHrYZ/3vlFx3KoNRGSoCph2FDrwCrzat9RNWpd+Lca
Lxh4PyRrfUitpq//1U1tAEOf2/HjtdRG2OqteS6yknoDYvZcEMblU5vizFS8
gXEGtTlmoxxzymKoN2LqS6tvuoOoLSEeXlL2cAu1FQ6oFmcE21Bbw+Jj6rU4
Q+pN0FKa3j+xltoGjjb67k3K1LZYcHTYeWgBtR0cBrJjDT++lLU9pD/VNCdO
UjugV66x/voItSNcvWrXPnlJ7YSWR/NW3umjdsYd9dKUHd3ULvjsfuy+m39Q
u6JK/l3F+Q5qN3xt9OSVejs1EBI/5aXSKmsJkNZgMJT6hObucHc/O+P7O83d
UVfeejG9meYeWHGP0TOPWuIBS0lbXHsTzTfj1pDTb6PUks1QTjDV8p7zW7D3
7XG9zjm/BVlZeoanaZ/cVtQV6Yzn0euRbIX2ar07P7TQ3BPpsWP2Q3Ov3xOl
NZuiGXPvzwtreCsr657S3AuNvak1gk6ae8Pprt7BpfR5SbzRH+PKbfyT5gz8
vKLk+7PPac7AYEW6SVYPzX3QcfBc455emvtgefOSst39NPfFhdP9fycO0twX
nIwRwy/mvk8/dHG0Go8N09wPZjMFJ8pf03wb2owG/GrpfJBsQ7ZcSk/vGM2Z
SM50DJj/huZM8KwLpPpz5xMLEwsFPM8pmrOQ8U5dHD1NczbKl4gtD72XNdi4
q8Q3L6PzU8LGKn9uk3RW1lI2HLwLCzvl6XzmgNlqoDE6X9bgIKnl9hu5hbKW
cPDgWWeD0mJZSzlg8BuYaork/bHLrN9Zaxl5f9gl3edqKZH3x2T7qR1qKuT9
MeO830VpBfkADHw1UjWzknwAqvMMS4dUyQfg+gPpm8dryAfgapHxkSvq5ANR
Xwj2YQ3ygbicN2YfpkU+EK9YbbYbPicfCKOnLzChQz4IpYqWnGpd8kGYLj2w
PUGffBCa79mkGRiQD8KhipH89rnrBxcDzKgfJcbkuZhiWfXrm5DnYvpjieE9
U/JcPF+XeTjUnHwwKh1mVUYsyAcjtf/IozRL8sFY5nauXt6afDB03kqVszaR
D8GxTvcbM3R9Qwhe/OL2a7Id+RDEZO5nDNiTDwHvgziM7Uieh6U9UsUaJ/I8
RK0djFrtQp6HW31pmYmu5HlQME/ZWe9Gno8L0Yq2au7k+RhMOT8V6UGeD82m
h9KKzeT5SDmzsfT13PU5FMbPjlYbe5IPhQ6zTEHsRT4Uvj5uFwu8yYfiCFP9
ai2DfBhUnfrNR33IhyHbzsVB1Y98GDzMy3tst5EPw3RLrl0gk7wA3RZG7N0s
8gI0nPrO+QCbvACTJl1K+RzyAuTnlnWU+JMPR5JmfmV5APlwmOUqFF0OJB+O
Z8cNqq7Q75M0HAd1Rxdd4pKPQP0tjcqyYPIRGJ+xuFQcQj4CkwXJGnk88hHo
Wv92cQafvBA5ednZMaGy1hEik1F1mh1GzyeE70RLpI1A1kIheidmB1aH0/ML
ochRsp6kPitES1EhrzmC9glh8XI6ulwo6x4hShVYcRki2i9CYPHeZJaY9ouQ
k7M8TzuS9osQb5JVN0wtFKHjxfiG6u20X4TEPK8HaVG0X4RvxywrXXfQfhG0
k/V6Zql7RMi9EZB0O5r2i9FnKE1Io/8DOmIkdpn2W++k/WKYaa/vHKYWiqHM
+sAviaX9YoyffJzM2UX7xVh0c7+lfBztF0Oj7X7xlf/6XzPX8G8=
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1:eJxVzXk81Hkcx/EhLduJ5cF2rUiXq0GRDO9xDGnUOAYzhjmwo8Px0CiyLbUq
abNpVTodbSoqR4voQDoolQ61orZW2uphU9J97LaP/X7+2N/jMY95vOY9z99n
oiohMEabw+Fs/fz59/u/55k75/8PGm5c2ZkdHMt+10OPT40oK3UFa33oVprs
lcauYW2EQ9F1ImF2DmtTlEvVXbcEeazHQXK1IldTtp21GUZlpOc2qApYm2Oy
JmBM1uFi1pNwz+lGkGXTPtaT0dfO15H1HGA9FQVT1Ht+G36I9XRsD9CeOcKh
nLU1StZV3J06rZK1LaKKD6//u7KK9QzIUrMHq7i/suai5vXE5dEl1azt0evT
8+Mvo2pZO6D/XpKteuEx1o7wCzo95XV1HeuZ0BviLX38op71LNx/uSdH3+IE
aycMz105J8nzJGtn/Jw2K8VVfIr1bBT11dmdDGtg7YL6vhxfmymNrOegptQk
RLCT2hU63S9H9+k1seZB5hZ+NzqR2g0HDTavfHuV2h0phtvyXticZg3k9PXm
78pknQFk9N4acL1JOx86mqWhYy2a2c6H2lRv/neLWXM8sHqIpLOonHYPfL9J
wbvYT7snzjV2djlan2G7JyQD9eamMaw5XlBv2J9VtoN2LxjrmOaZX6LdG1VG
eU8Of6DdGy3yOzFp086yXYADnmKbmiDWGQJot/GvrU2j3Qeid3fjviqi3QcF
0TGN6Wdo90V2pVz0Vy/tvnh+7Mr6tKHn2D4XmcXN3T4WrDPmonyfUVecO+1+
mGU1Xqwrpd0PTUO9kq2X0j4PcW8Ft19k0z4PglzniqQi2oXwu2jdcqKGdiEy
Hm058uAC7f6wfB/S+P4O7f4w0d7iZviM9vmYUBigdNI6z/b5mKrfHZtqwJqz
APovLY/0mtG+ABXcYVVZdrSLkGmXZxXPYw0RfPvFxkV+9H8R/HS66qxCWTeK
MMgTNJhEkQ9AgmCKfXw8+QBwX+b95JRKPgDXVuRfTvuBfACyBwZjPTaSD8QQ
j5CozVvJB8Iy73lwUgH5QHDHFcU/2k8+EGXOmavelZMPgnOK9dAjteSDMGGZ
fLxeA/kguH3UFIw8Rz4I+1RhJs1t5IOhtcGhzfo6+WBk7m09M7+TfDAWW667
aP07+WAcDxcmXXhAXozb/NfGVk/Ii2HnWnk/oJ+8GNWdOtf4g+TFuJzeUPvx
DfkQzN5d7JL1kfznPvlnV49WC/MhCMvf8cbwC9aNIYjSabtoMow1JxRemsLE
wZGsEYqVa1wflBqQD0XT41xdnjH5UCg7RhUdMiUfhvqn3Mj3Y8mH4eFOnY7p
35APg5X68xvNyYeh37DtNteSvAQJ3ZusR0wlL0GvP6exbTp5CWRPBls0NuQl
qH3Yv2joDPJSGA0fVp9uT16Ko+c7jj9wJC9FssYhdqYTeSmuF5iWJs0mH45W
r3mK3XPIh2PVEYPIGh75cAjP3lp8yp18OPgJF3xq+ORlMChdWLLHk7wMCwcM
HFK8ycugtWblJk8f8jJc+cSTaM0lH4GYDluzKj/yERCOuZ8YIiQfgfQXnPan
/uQjYGxbfTxtAflIDAreln0UkY/EJI8Bw+RA8pFoLXSL+COIfCQuneYPeIvJ
y1HyfpFjYQh5OebuSln1PJS8HAbcWnsXCXk5Ltjwdq+QklfAx93C8Gg4azMF
3mrq7vbI6H0KCJLqhCMjWSsU2H4zudhOTu9X4Jy2rsU8BetCBZ6ok0cplHRP
gckZ94viVazvKeCSf9BkeRTdVyJq7cb9qdF0X4mvk9rXLouh+0oYnwl7FPct
3VfCKPLyB7ma7iuxgls7IIyl+0pohJtfOS6k+0rMSX5ub7qI7ivRrM5tf0XN
USGqNfFV+2K6r8KSh72tJUvovgouvkfjU+LovgrrncfqCuLpvgr6vIGjoxPo
vgozd1fkdVA3qvDlp9XntyW2uP8DZpjEVA==
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
evX2nZbG12DX51GNvTe1wr8AyDfGAg==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.760204081632653, 0},
      BaseStyle->20,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Population Size\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}, {
         FormBox[
          StyleBox["\"Days\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[0.0075]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        Thickness[0.0001], 
        Opacity[0.5]],
      ImagePadding->All,
      ImageSize->1000,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Fitted\"", 
         GrayLevel[0.5], 40, StripOnInput -> False], TraditionalForm],
      PlotRange->{{1, 150.}, {0, 0.9}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1:eJw10AlUTXkAx/GXakRjxhZqQsqSPaJF2y9Siur1euq1vN6ibGOGMoXhJWXL
lr1TkSyRZcKxhYZm0kKytUcyQiQxeTpvhmE47u+ec887n/u73/s/5w1SL5RE
dRKJRLs/319+v15v3NLTvlx1bsIDRLt0rTm4qEqwEXT9e7pUbKa74+rF6I++
v9G94fZ4e6XebbofZOetbAe+pc3x7qchpuWm1YIt8K73N/vHTqEtMXSubmnU
QnowvI7l26zNpIciwWarIusObQ1drkv9BcMawSMAa4O+11zoUdhUrGnKXUqP
QWu8LiXwPG0DwwEfc+M76HFwfr42vs2hVvB4ZEZO0JdqaFusjlpyS1pIT0CU
ww3Z5q78vybCVLqybIeEtoPLjZ7fvk+n7eFoebF6ZhPtgKeZ8guOI+sFO8LH
J++8eww9CZEjbDO659FO0MtzPir5QDvDt+5Y/RXX+4Jd4DQpJaXvStoVM9bP
KxzxO+0GxZKdNXd1NJCcb9X573EPvjoBqJ61Ii1urmCROzI3OD4P2cPdHYen
d/ikl3OfjOAp93UuH7hPxsOhV1vF1g3CPgW916dVNQUITpiCt7vGmBkv4+6B
FU5ybcNe7h5Qa2cfji3gPhXlr5/caH3EfSq2Rj6+EvGJuyeebjk7uPmHh8Lu
icMOqZr9doJFXnj76o+aHH/uXlheuG5L3zncp0E21sSss4b7NEi6/Nqaso27
Nxp314ZcP8TdG7ZHipOvn+fuA4suQxdll3D3wdmg9rJFNdyn415q3gjXZ9yn
44JB1usBWu4zsMHFVG6l1yjsM1DgHpMV2k2wyBffuZ5+eK8fd1809befnGbF
3Q+mxkVGl0Zz94PGZPc22HP3h3qn+Ed7cPdHtna/KmcadzFGa2dt2CMWDDG8
XSdIzGV8XwyR38L1YxWCC8SYmr9mfkMU+wDE6ufkjlrAPgA5mtLNVjHsA1Bu
13GzZAn7ADg6mRQP0LCXQLbm34WjE9lLsPREe5RuLXsJYk0utyVtZC9Bdf67
TpUp7APhUT4wsHUH+0A0WffyvZPKPhArHpgNSspgH4i6sQeKO+9jL0XEmTUi
1QH2UuR7d1Nty2YvxbCbu3wzcthLMUTzRm/VcfYzITKN3+GRy34mtK+6aptP
sf+860VrF5xhPxPOLQZeVefYByH33N1VlnnsgzC88IhF0CX2QVD6d1oXnc8+
CMaGJXpxV9gHI+rU49LIAvbBqHpVJHL7k30wFkdfu2x4jX0wAn1D3l8sYi9D
+jzJ6fAS9jIUjn9a0FbKXgaj4NxPi26wl2GQR6bdkzL2IUhrr7D0Lmcfgsz5
c+KybrEPgY3/kLqW2+xDMHK/8wvru+xDMfxeo1PYPfahCBpWL0+sYB+KfsFm
lZmV7ENR62hrfrqKfRgkkooTF6vZhyG7ybYjr4b9ZzslqE/Wsg9DRunEoL11
7MPRPVljk1TPPhz20pXTVffZh6Ms5uQH+wfsw1Gh7bOrcwN7ORKGparu0JDD
M9n6+PaH7OX4ZYvJBb9G9nLUrR1XYvCIfQR0L4zNztGIwBg/i5eKv9hH4KSn
/mLDx+wjYKfa1JxNixRoi/tvuXsTewWKVg1T1dIJCgwZtLlo/hP2CkzQJVbp
aJESk439Lic+FWyhRL0r9hk94/eUCDWrOLKBViqxvKXgH6Nmfl8JB5V5XhKd
pcSJstkG7+kCJY53HPr483PBj5ToWRtT1EiLVDDs0SfO9wXPV0EsTxmVR0MF
G9FxfYsWnq9CA7qbrKETVJAZiJc101kqWO5s9/J6yfNV+C9zdeoh+pEKmpUH
NZ9okRqelUbfy1p5vhp9YncpcmmoEXgrLLHTK56vRq8TR5OldIIa6+N7rDtE
Z6lhM2Dxxna6QI1IU4Mjrm2Nbv8DupLzIQ==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
H3HH6T+btt1Y
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
mrxsdl+FsIZZCfPzXwj+BQDT0H8=
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.008333333333333333], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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

          "]]}}, {}, {}, {}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.760204081632653, 0},
      BaseStyle->20,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}, {
         FormBox[
          StyleBox["\"\"", 
           GrayLevel[0.5], 30, StripOnInput -> False], TraditionalForm], 
         None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[0.0075]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        Thickness[0.0001], 
        Opacity[0.5]],
      ImagePadding->All,
      ImageSize->1000,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Ideal\"", 
         GrayLevel[0.5], 40, StripOnInput -> False], TraditionalForm],
      PlotRange->{{1, 150.}, {0, 0.9}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{"\"B\"","\"D\"","\"XX\"","\"R\"","\"W\""},
      "SwatchLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                 StyleBox["\"Experiment\"", 30, StripOnInput -> False], 
                 TraditionalForm], TraditionalForm, Editable -> True], {
                Directive[
                 GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                   None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "25"}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             StyleBox["\"Experiment\"", 30, StripOnInput -> False]}]}], 
         "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7270396232572317`*^9, 3.7270396443238297`*^9}, 
   3.727039939327326*^9},ExpressionUUID->"d4d42933-9a5e-4a48-bf5e-\
138647c7b8cc"],

Cell[BoxData["\<\"experimentsGrid2.pdf\"\>"], "Output",
 CellChangeTimes->{{3.7270396232572317`*^9, 3.7270396443238297`*^9}, 
   3.727039939662018*^9},ExpressionUUID->"ce5198d0-6225-4940-87df-\
afded412b798"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Third Plot", "Title",
 CellChangeTimes->{{3.727615082284251*^9, 
  3.7276150860963078`*^9}},ExpressionUUID->"d98ce708-b2e1-4265-be1d-\
3e8ffa9dc4c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<DMplot.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataTitle", "=", 
  RowBox[{"rawData", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"2", ";;", "All"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"rawData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", "All"}], ",", 
      RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], "//", 
   "Transpose"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "#", "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Opacity", "[", ".75", "]"}], ",", 
              RowBox[{"Thickness", "[", ".015", "]"}], ",", "#"}], "]"}], 
            "}"}], "&"}], "/@", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "[", "dataTitle", "]"}]}], "]"}], "]"}]}], 
         ")"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", ".0075", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", "40"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "Gray", ",", "60"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<Generation\>\"", ",", "\"\<Ratio\>\""}], "}"}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"Opacity", "[", ".5", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Drive Allele Frequency at Release\>\"", ",", "Gray", ",", "40"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "All"}], "}"}], ",", "All"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swatch", "=", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", "dataTitle", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", "25"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"LegendLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\>\"", ",", "30"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"plot", ",", "swatch"}], "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.727615101191896*^9, 3.727615122200444*^9}, {
  3.727615177603076*^9, 3.727615181431677*^9}, {3.727615273742174*^9, 
  3.7276153221439466`*^9}, {3.7276153625250587`*^9, 3.727615369444089*^9}, {
  3.727615412688352*^9, 3.727615424012219*^9}, {3.727615497291445*^9, 
  3.727615534967259*^9}, {3.727615612569641*^9, 3.727615647705894*^9}, {
  3.727615705154109*^9, 3.727615734058147*^9}, {3.72761580645121*^9, 
  3.727615834464376*^9}, {3.727615876609873*^9, 
  3.727615935986579*^9}},ExpressionUUID->"0248ddad-1e7b-48f6-9429-\
f59c7ea05c06"],

Cell[BoxData["\<\"/Users/sanchez.hmsc/Documents/GitHub/MedFlyCRISPR-CAS9/\
ModelFits\"\>"], "Output",
 CellChangeTimes->{{3.727615106683432*^9, 3.7276151224963923`*^9}, 
   3.727615181795125*^9, {3.7276152748959208`*^9, 3.727615322438224*^9}, 
   3.7276153697788267`*^9, {3.727615417137307*^9, 3.7276154244031467`*^9}, {
   3.727615498942253*^9, 3.7276155378421783`*^9}, {3.7276156162491283`*^9, 
   3.727615648109701*^9}, {3.727615705626658*^9, 3.727615734488694*^9}, {
   3.7276158080737467`*^9, 3.727615834849828*^9}, 3.727615877690975*^9, {
   3.727615930816558*^9, 
   3.727615936295722*^9}},ExpressionUUID->"c80faa89-1fc6-42e2-9e1e-\
91d902687c29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"90%\"\>", ",", "\<\"75%\"\>", ",", "\<\"50%\"\>", 
   ",", "\<\"25%\"\>", ",", "\<\"10%\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.727615106683432*^9, 3.7276151224963923`*^9}, 
   3.727615181795125*^9, {3.7276152748959208`*^9, 3.727615322438224*^9}, 
   3.7276153697788267`*^9, {3.727615417137307*^9, 3.7276154244031467`*^9}, {
   3.727615498942253*^9, 3.7276155378421783`*^9}, {3.7276156162491283`*^9, 
   3.727615648109701*^9}, {3.727615705626658*^9, 3.727615734488694*^9}, {
   3.7276158080737467`*^9, 3.727615834849828*^9}, 3.727615877690975*^9, {
   3.727615930816558*^9, 
   3.72761593630145*^9}},ExpressionUUID->"326ee2ca-d104-42f5-8c09-\
c1b67be3909e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.9`", ",", "0.855`", ",", "0.777272727`", ",", "0.638880231`", ",", 
     "0.485476287`", ",", "0.359363003`", ",", "0.264753188`", ",", 
     "0.198423178`", ",", "0.151788102`", ",", "0.118600276`", ",", 
     "0.094483355`", ",", "0.076570484`", ",", "0.062982875`", ",", 
     "0.052475722`", ",", "0.044209096`", ",", "0.03760466`", ",", 
     "0.032256012`", ",", "0.027871944`", ",", "0.024239942`", ",", 
     "0.021202284`", ",", "0.018640082`", ",", "0.016462441`", ",", 
     "0.014598959`", ",", "0.012994454`", ",", "0.011605202`", ",", 
     "0.010396209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.75`", ",", "0.71969697`", ",", "0.658759124`", ",", "0.574238455`", 
     ",", "0.474951518`", ",", "0.379968991`", ",", "0.298447265`", ",", 
     "0.233848944`", ",", "0.18432389`", ",", "0.146818289`", ",", 
     "0.118370952`", ",", "0.096613735`", ",", "0.07978013`", ",", 
     "0.066589891`", ",", "0.056122491`", ",", "0.047714355`", ",", 
     "0.040883304`", ",", "0.03527521`", ",", "0.030626895`", ",", 
     "0.026740386`", ",", "0.023464966`", ",", "0.020684567`", ",", 
     "0.018308819`", ",", "0.016266634`", ",", "0.014501541`", ",", 
     "0.012968282`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5`", ",", "0.475`", ",", "0.440243902`", ",", "0.400588746`", ",", 
     "0.356567083`", ",", "0.311489801`", ",", "0.267989863`", ",", 
     "0.228144745`", ",", "0.193037069`", ",", "0.162939898`", ",", 
     "0.137592292`", ",", "0.116464553`", ",", "0.098940741`", ",", 
     "0.084422422`", ",", "0.07237666`", ",", "0.062351097`", ",", 
     "0.053972178`", ",", "0.046936176`", ",", "0.040998113`", ",", 
     "0.035961046`", ",", "0.031666664`", ",", "0.027987473`", ",", 
     "0.024820462`", ",", "0.022082059`", ",", "0.019704155`", ",", 
     "0.017630968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.25`", ",", "0.316666667`", ",", "0.295901639`", ",", "0.273826645`", 
     ",", "0.250574924`", ",", "0.226961625`", ",", "0.203703075`", ",", 
     "0.181438458`", ",", "0.16064511`", ",", "0.141621044`", ",", 
     "0.124499617`", ",", "0.109284258`", ",", "0.09588837`", ",", 
     "0.084171285`", ",", "0.073966263`", ",", "0.065100024`", ",", 
     "0.057405059`", ",", "0.05072653`", ",", "0.044925438`", ",", 
     "0.039879433`", ",", "0.035482242`", ",", "0.03164237`", ",", 
     "0.028281494`", ",", "0.025332799`", ",", "0.022739386`", ",", 
     "0.020452828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "0.105555556`", ",", "0.099723757`", ",", "0.093971983`", 
     ",", "0.088317628`", ",", "0.082795007`", ",", "0.077434206`", ",", 
     "0.072261378`", ",", "0.067298136`", ",", "0.062561299`", ",", 
     "0.058062887`", ",", "0.053810331`", ",", "0.049806856`", ",", 
     "0.046051967`", ",", "0.042542`", ",", "0.03927069`", ",", 
     "0.036229725`", ",", "0.033409261`", ",", "0.030798383`", ",", 
     "0.0283855`", ",", "0.02615868`", ",", "0.024105927`", ",", 
     "0.022215388`", ",", "0.020475524`", ",", "0.018875229`", ",", 
     "0.017403915`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.727615106683432*^9, 3.7276151224963923`*^9}, 
   3.727615181795125*^9, {3.7276152748959208`*^9, 3.727615322438224*^9}, 
   3.7276153697788267`*^9, {3.727615417137307*^9, 3.7276154244031467`*^9}, {
   3.727615498942253*^9, 3.7276155378421783`*^9}, {3.7276156162491283`*^9, 
   3.727615648109701*^9}, {3.727615705626658*^9, 3.727615734488694*^9}, {
   3.7276158080737467`*^9, 3.727615834849828*^9}, 3.727615877690975*^9, {
   3.727615930816558*^9, 
   3.727615936305067*^9}},ExpressionUUID->"46995e23-9068-4c09-a04f-\
f386cf856027"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.01388888888888889], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
/+Vjgu9tNkZc3xoI/wf47XJH
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.01388888888888889], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
mybbSUcEw/8BE/hwlA==
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.01388888888888889], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
/wHeFH9S
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.01388888888888889], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
CkRP34X/A0Z+iBw=
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.01388888888888889], Thickness[0.015], Opacity[0.75], 
         LineBox[CompressedData["
1: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
          
          "]]}}, {}, {}, {{}, {}}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.1275510204081634`, 0},
      BaseStyle->40,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Ratio\"", 
           GrayLevel[0.5], 60, StripOnInput -> False], TraditionalForm], 
         None}, {
         FormBox[
          StyleBox["\"Generation\"", 
           GrayLevel[0.5], 60, StripOnInput -> False], TraditionalForm], 
         None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[0.0075]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        Thickness[0.0001], 
        Opacity[0.5]],
      ImagePadding->All,
      ImageSize->1000,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Drive Allele Frequency at Release\"", 
         GrayLevel[0.5], 40, StripOnInput -> False], TraditionalForm],
      PlotRange->{{1, 26.}, {0, 0.9}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{"\"90%\"","\"75%\"","\"50%\"","\"25%\"","\"10%\""},
      "SwatchLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                 StyleBox["\"\"", 30, StripOnInput -> False], 
                 TraditionalForm], TraditionalForm, Editable -> True], {
                Directive[
                 GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], 
                    RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {30, 30}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.3666666666666667] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          GrayLevel[0.5], 25], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                   None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "30"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "25"}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             StyleBox["\"\"", 30, StripOnInput -> False]}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.727615106683432*^9, 3.7276151224963923`*^9}, 
   3.727615181795125*^9, {3.7276152748959208`*^9, 3.727615322438224*^9}, 
   3.7276153697788267`*^9, {3.727615417137307*^9, 3.7276154244031467`*^9}, {
   3.727615498942253*^9, 3.7276155378421783`*^9}, {3.7276156162491283`*^9, 
   3.727615648109701*^9}, {3.727615705626658*^9, 3.727615734488694*^9}, {
   3.7276158080737467`*^9, 3.727615834849828*^9}, 3.727615877690975*^9, {
   3.727615930816558*^9, 
   3.727615936371361*^9}},ExpressionUUID->"05592d5f-07d0-4db2-bca4-\
e6a37ff76634"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1725, 1230},
WindowMargins->{{Automatic, 5}, {Automatic, 2}},
Magnification:>0.75 Inherited,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 3, 70, "Title", "ExpressionUUID" -> \
"304d4e64-94bd-42cb-88f7-788f7a7e75b8"],
Cell[CellGroupData[{
Cell[760, 29, 988, 25, 75, "Input", "ExpressionUUID" -> \
"09ef80fb-7e2a-4528-8b6c-b46db9e360af"],
Cell[1751, 56, 599, 12, 26, "Output", "ExpressionUUID" -> \
"606e16c1-4f81-42b7-a366-facb714767f0"],
Cell[2353, 70, 4542, 89, 139, "Output", "ExpressionUUID" -> \
"3d17a3b4-83f8-43c1-b82e-42e388779dd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6932, 164, 8700, 217, 603, "Input", "ExpressionUUID" -> \
"94d4c53c-44f1-4236-b101-f395cefb2509"],
Cell[15635, 383, 25701, 521, 795, "Output", "ExpressionUUID" -> \
"aa66b49b-ffdc-4a6b-a2b5-7abf43d4daf5"],
Cell[41339, 906, 156, 3, 26, "Output", "ExpressionUUID" -> \
"d6e0f08c-d000-4f5e-b77d-f851903a66ad"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41544, 915, 158, 3, 51, "Title", "ExpressionUUID" -> \
"0a82a1d7-261e-4dfd-a71e-fe159c8d2376"],
Cell[CellGroupData[{
Cell[41727, 922, 1064, 27, 75, "Input", "ExpressionUUID" -> \
"7d95e7e9-7cc1-49b1-8b91-81db49545b55"],
Cell[42794, 951, 516, 10, 26, "Output", "ExpressionUUID" -> \
"06d357e1-7f23-4557-bd67-286601c7bdae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43347, 966, 7818, 199, 603, "Input", "ExpressionUUID" -> \
"6e98dd1f-5aa1-414c-a830-097ff892f349"],
Cell[51168, 1167, 44258, 846, 797, "Output", "ExpressionUUID" -> \
"d4d42933-9a5e-4a48-bf5e-138647c7b8cc"],
Cell[95429, 2015, 208, 3, 26, "Output", "ExpressionUUID" -> \
"ce5198d0-6225-4940-87df-afded412b798"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[95686, 2024, 155, 3, 51, "Title", "ExpressionUUID" -> \
"d98ce708-b2e1-4265-be1d-3e8ffa9dc4c4"],
Cell[CellGroupData[{
Cell[95866, 2031, 4710, 117, 395, "Input", "ExpressionUUID" -> \
"0248ddad-1e7b-48f6-9429-f59c7ea05c06"],
Cell[100579, 2150, 654, 10, 26, "Output", "ExpressionUUID" -> \
"c80faa89-1fc6-42e2-9e1e-91d902687c29"],
Cell[101236, 2162, 709, 12, 26, "Output", "ExpressionUUID" -> \
"326ee2ca-d104-42f5-8c09-c1b67be3909e"],
Cell[101948, 2176, 3729, 66, 91, "Output", "ExpressionUUID" -> \
"46995e23-9068-4c09-a04f-f386cf856027"],
Cell[105680, 2244, 87343, 1523, 795, "Output", "ExpressionUUID" -> \
"05592d5f-07d0-4db2-bca4-e6a37ff76634"]
}, Open  ]]
}, Open  ]]
}
]
*)

